version: '3.8'

services:
  vk-uploader:
    # Use pre-built image (replace YOUR_USERNAME with your GitHub username)
    # image: ghcr.io/YOUR_USERNAME/vk-uploader-standalone:latest

    # Or build locally:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    container_name: vk-uploader
    restart: unless-stopped

    # Required capabilities for WireGuard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE

    # Access to host networking for WireGuard
    # Alternative: use network_mode: "host" for better performance
    # network_mode: "host"

    environment:
      # Required
      - VK_TOKEN=${VK_TOKEN}

      # Optional - Paths
      - VIDEO_DIR=/app/videos
      - WIREGUARD_DIR=/app/wireguard

      # Optional - Performance
      - POLL_INTERVAL=300                 # Poll every 5 minutes
      - MAX_CONCURRENT=5                  # Up to 5 concurrent uploads
      - UPLOAD_CHUNK_SIZE_MB=10           # 10MB chunks
      - PARALLEL_WORKERS=3                # 3 parallel workers per upload
      - MEMORY_LIMIT=6g                   # Not enforced in compose, use deploy section

      # Optional - WireGuard (base64 encoded configs)
      - WG_CONFIG_1=${WG_CONFIG_1:-}
      - WG_CONFIG_1_NAME=${WG_CONFIG_1_NAME:-}
      - WG_CONFIG_2=${WG_CONFIG_2:-}
      - WG_CONFIG_2_NAME=${WG_CONFIG_2_NAME:-}
      - WG_CONFIG_3=${WG_CONFIG_3:-}
      - WG_CONFIG_3_NAME=${WG_CONFIG_3_NAME:-}
      - WG_CONFIG_4=${WG_CONFIG_4:-}
      - WG_CONFIG_4_NAME=${WG_CONFIG_4_NAME:-}
      - WG_CONFIG_5=${WG_CONFIG_5:-}
      - WG_CONFIG_5_NAME=${WG_CONFIG_5_NAME:-}

      # Optional - Logging
      - LOG_LEVEL=INFO
      - TZ=Australia/Sydney

    volumes:
      # Mount your videos directory
      - ${VIDEOS_DIR:-./videos}:/app/videos

      # Optional: Mount WireGuard configs directory
      # If you prefer .conf files over env variables
      - ${WIREGUARD_DIR:-./wireguard}:/app/wireguard:ro

      # Optional: Persist logs
      - ./logs:/app/logs

    # Resource limits (optional)
    deploy:
      resources:
        limits:
          cpus: '11'
          memory: 6G
        reservations:
          cpus: '2'
          memory: 2G

    # Health check
    healthcheck:
      test: ["CMD", "pgrep", "-f", "uploader-standalone.py"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 30s

    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
