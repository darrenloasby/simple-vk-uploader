name: Build Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-normal:
    name: Build Normal (${{ matrix.arch.name }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        arch:
          - name: amd64
            platform: linux/amd64
          - name: aarch64
            platform: linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ matrix.arch.name }} image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.arch.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/darrenloasby/${{ matrix.arch.name }}-simple-vk-uploader:latest
            ghcr.io/darrenloasby/${{ matrix.arch.name }}-simple-vk-uploader:${{ steps.vars.outputs.short_sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=normal-${{ matrix.arch.name }}
          cache-to: type=gha,mode=max,scope=normal-${{ matrix.arch.name }}

      - name: Image info for ${{ matrix.arch.name }}
        run: |
          echo "Built and pushed ${{ matrix.arch.name }} image with tags:"
          echo "latest"
          echo "${{ steps.vars.outputs.short_sha }}"

  build-addon:
    name: Build Add-on (${{ matrix.arch.name }})
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        arch:
          - name: amd64
            platform: linux/amd64
          - name: aarch64
            platform: linux/arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare tags
        id: vars
        run: |
          echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ matrix.arch.name }} addon image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.addon
          platforms: ${{ matrix.arch.platform }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/darrenloasby/${{ matrix.arch.name }}-simple-vk-uploader-addon:latest
            ghcr.io/darrenloasby/${{ matrix.arch.name }}-simple-vk-uploader-addon:${{ steps.vars.outputs.short_sha }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha,scope=addon-${{ matrix.arch.name }}
          cache-to: type=gha,mode=max,scope=addon-${{ matrix.arch.name }}

      - name: Image info for ${{ matrix.arch.name }}
        run: |
          echo "Built and pushed ${{ matrix.arch.name }} addon variant with tags:"
          echo "latest"
          echo "${{ steps.vars.outputs.short_sha }}"
