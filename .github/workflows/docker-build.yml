name: Build Multi-Platform Docker Images

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        variant:
          - name: "base"
            dockerfile: "Dockerfile"
            suffix: ""
          - name: "standalone"
            dockerfile: "Dockerfile.standalone"
            suffix: "-standalone"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for ${{ matrix.variant.name }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=${{ matrix.variant.suffix }}
            type=ref,event=pr,suffix=${{ matrix.variant.suffix }}
            type=semver,pattern={{version}},suffix=${{ matrix.variant.suffix }}
            type=semver,pattern={{major}}.{{minor}},suffix=${{ matrix.variant.suffix }}
            type=semver,pattern={{major}},suffix=${{ matrix.variant.suffix }}
            type=sha,prefix={{branch}}-,suffix=${{ matrix.variant.suffix }}
            type=raw,value=latest${{ matrix.variant.suffix }},enable={{is_default_branch}}

      - name: Build and push ${{ matrix.variant.name }} Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.variant.dockerfile }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.variant.name }}
          cache-to: type=gha,mode=max,scope=${{ matrix.variant.name }}

      - name: Image digest for ${{ matrix.variant.name }}
        run: echo ${{ steps.meta.outputs.tags }}
